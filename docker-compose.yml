# Docker Compose for BIWOCO AI Customer Support Assistant - Development

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: biwoco-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: biwoco_chatbot_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d biwoco_chatbot_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - biwoco-network

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: biwoco-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - biwoco-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: biwoco-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/biwoco_chatbot_dev
      - REDIS_URL=redis://:redis123@redis:6379/0
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - PINECONE_API_KEY=${PINECONE_API_KEY:-}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT:-us-east-1-aws}
      - SECRET_KEY=dev-secret-key-change-in-production-super-long-and-secure
      - CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://frontend:3000
      - LOG_LEVEL=DEBUG
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - biwoco-network

  # Next.js Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: biwoco-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=dev-nextauth-secret-32-chars-minimum-length-for-security
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
      - NEXT_PUBLIC_APP_NAME=BIWOCO AI Assistant (Docker Dev)
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/biwoco_chatbot_dev
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY:-}
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - biwoco-network

  # Nginx Load Balancer (Optional)
  nginx:
    image: nginx:alpine
    container_name: biwoco-nginx
    restart: unless-stopped
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - biwoco-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  biwoco-network:
    driver: bridge
    name: biwoco-network